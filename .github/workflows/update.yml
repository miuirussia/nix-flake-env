name: "Update dependencies"
on:
  workflow_dispatch:
  schedule:
    - cron: "0 4 * * *"
jobs:
  build-latest-lua-lsp:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - uses: actions/checkout@v2
        with:
          repository: sumneko/lua-language-server
          submodules: recursive
      - name: Install nix
        uses: miuirussia/install-nix-action@master
        with:
          nix_path: nixpkgs=channel:nixpkgs-unstable
          install_url: https://github.com/miuirussia/nix-unstable-installer/releases/latest/download/install
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
            experimental-features = nix-command flakes
            substituters = https://hydra.iohk.io https://cache.nixos.org/
            trusted-public-keys = hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ= cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY=
      - uses: actboy168/setup-luamake@master
      - run: rm -rf bin
      - run: luamake
      - run: mv bin/lua-language-server bin/lua-language-server-${{ matrix.os }}
      - run: nix-shell -p nix-prefetch-git --run "nix-prefetch-git --url https://github.com/sumneko/lua-language-server.git --rev $(git rev-parse HEAD) --fetch-submodules > bin/hash.json"
      - uses: actions/upload-artifact@v2
        with:
          name: lua-language-server
          path: bin
          retention-days: 1

  update:
    name: "Update dependencies"
    needs: [build-latest-lua-lsp]
    runs-on: macos-latest
    outputs:
      release_id: ${{ steps.push.outputs.release_id }}
    steps:
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +%s)"
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install node
        uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Install nix
        uses: miuirussia/install-nix-action@master
        with:
          nix_path: nixpkgs=channel:nixpkgs-unstable
          install_url: https://github.com/miuirussia/nix-unstable-installer/releases/latest/download/install
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
            experimental-features = nix-command flakes
            substituters = https://hydra.iohk.io https://cache.nixos.org/
            trusted-public-keys = hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ= cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY=

      - name: Configure git
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email '41898282+github-actions[bot]@users.noreply.github.com'
      - name: Update flakes and nodePackages
        run: |
          nix flake update
          (cd $GITHUB_WORKSPACE/overlays/vscode && ./update-vscode-plugins.py)
          (cd $GITHUB_WORKSPACE/overlays/fonts && ./apple-update)
          (cd $GITHUB_WORKSPACE/overlays/nodePackages/lib && npx -y node2nix -- -i node-packages.json --nodejs-16)
          rm -rf $GITHUB_WORKSPACE/overlays/sumnekoLua/lua-language-server
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Get lua-language-server
        uses: actions/download-artifact@v2
        with:
          name: lua-language-server
          path: overlays/sumnekoLua/lua-language-server
      - name: Push changes
        id: push
        env:
          RELEASE_ID: v0.1.${{ steps.date.outputs.date }}
        run: |
          echo $RELEASE_ID > version
          git add flake.lock overlays version
          git commit -m "Release $RELEASE_ID"
          git push origin HEAD:update/"$RELEASE_ID"
          git tag "$RELEASE_ID"
          git push origin "$RELEASE_ID"
          echo "::set-output name=release_id::$RELEASE_ID"

  build-ghc:
    strategy:
      matrix:
        ghc: ['884', '8107']
    name: "Build ghc${{ matrix.ghc }}"
    needs: update
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: update/${{ needs.update.outputs.release_id }}
      - name: Install nix
        uses: miuirussia/install-nix-action@master
        with:
          nix_path: nixpkgs=channel:nixpkgs-unstable
          install_url: https://github.com/miuirussia/nix-unstable-installer/releases/latest/download/install
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
            experimental-features = nix-command flakes
            substituters = https://hydra.iohk.io https://cache.nixos.org/
            trusted-public-keys = hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ= cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY=
      - uses: cachix/cachix-action@v10
        with:
          name: kdevlab
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: Build ghc${{ matrix.ghc }}
        run: |
          nix build --print-build-logs --show-trace --no-link .#pkgs.x86_64-darwin.haskell-nix.compiler.ghc${{ matrix.ghc }}
          nix build --print-build-logs --show-trace --no-link .#pkgs.x86_64-darwin.stack-in-nix

  build-hls:
    strategy:
      matrix:
        ghc: ['884', '8107']
    name: "Build hls${{ matrix.ghc }}"
    needs: [update, build-ghc]
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: update/${{ needs.update.outputs.release_id }}
      - name: Install nix
        uses: miuirussia/install-nix-action@master
        with:
          nix_path: nixpkgs=channel:nixpkgs-unstable
          install_url: https://github.com/miuirussia/nix-unstable-installer/releases/latest/download/install
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
            experimental-features = nix-command flakes
            substituters = https://hydra.iohk.io https://cache.nixos.org/
            trusted-public-keys = hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ= cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY=
      - uses: cachix/cachix-action@v10
        with:
          name: kdevlab
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: Build hls${{ matrix.ghc }}
        run: |
          nix build --print-build-logs --show-trace --no-link .#pkgs.x86_64-darwin.hls${{ matrix.ghc }}

  test:
    name: Test
    needs: [update, build-hls]
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: update/${{ needs.update.outputs.release_id }}
      - name: Install nix
        uses: miuirussia/install-nix-action@master
        with:
          nix_path: nixpkgs=channel:nixpkgs-unstable
          install_url: https://github.com/miuirussia/nix-unstable-installer/releases/latest/download/install
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
            experimental-features = nix-command flakes
            substituters = https://hydra.iohk.io https://cache.nixos.org/
            trusted-public-keys = hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ= cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY=
      - name: Unlock secrets
        run: |
          brew install git-crypt
          echo "${{ secrets.GIT_CRYPT_KEY }}" | base64  -d > /tmp/git-crypt-key
          git-crypt unlock /tmp/git-crypt-key
          rm /tmp/git-crypt-key
      - uses: cachix/cachix-action@v10
        with:
          name: kdevlab
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: Check flakes
        run: |
          nix flake show
      - name: Build
        run: |
          nix build --print-build-logs --show-trace --no-link .#darwinConfigurations.home.system
          nix build --print-build-logs --show-trace --no-link .#darwinConfigurations.work.system
          nix build --print-build-logs --show-trace --no-link .#darwinConfigurations.macbook.system

  release:
    name: Release
    needs: [update, test]
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Configure git
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email '41898282+github-actions[bot]@users.noreply.github.com'

      - name: Update master branch
        env:
          RELEASE_ID: ${{ needs.update.outputs.release_id }}
        run: |
          git cherry-pick origin/update/"$RELEASE_ID"
          git push origin "$GITHUB_REF"
          git tag -f "$RELEASE_ID"
          git push -f origin "$RELEASE_ID"

          git push origin -d update/"$RELEASE_ID"
